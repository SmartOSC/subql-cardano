services:
  postgres:
    build:
      context: ..
      dockerfile: ./packages/cardano-ibc/docker/pg-Dockerfile
    ports:
      - 5432:5432
    volumes:
      - .data/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0-alpine
    ports:
      - '6379:6379'
    command: redis-server
    volumes:
      - .data/redis:/data

  subql-cardano:
    build:
      context: ..
      dockerfile: ./packages/node/Dockerfile
    # depends_on:
    #   "postgres":
    #     condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432

      REDIS_HOST: redis
      REDIS_PORT: 6379

    volumes:
      - ./packages/cardano-ibc:/app/packages/cardano-ibc
    command:
      - ${SUB_COMMAND:-} # set SUB_COMMAND env variable to "test" to run tests
      - -f=/app
      - --db-schema=app
      - --workers=4
      - --batch-size=30
      - --unfinalized-blocks=true
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://subquery-node:3000/ready"
        ]
      interval: 3s
      timeout: 5s
      retries: 10

  graphql-engine:
    image: subquerynetwork/subql-query:latest
    ports:
      - 3003:3000
    depends_on:
      "postgres":
        condition: service_healthy
      "subql-cardano":
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: localhost
      DB_PORT: 5432
    network_mode: host
    command:
      - --name=app
      - --playground
      - --indexer=http://subql-cardano:3001
